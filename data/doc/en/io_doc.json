{
    "AVReceiver": {
        "description": "AVReceiver object to control network amplifier",
        "alias": [],
        "parameters": [
            {
                "description": "AVReceiver model. Supported: pioneer, denon, onkyo, marantz, yamaha",
                "mandatory": "true",
                "name": "model",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Port to use for connection",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the device",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Zone of the amplifier (if supported)",
                "mandatory": "false",
                "max": "10",
                "min": "0",
                "name": "zone",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [],
        "actions": [
            {
                "description": "Send a custom command to receiver (if you know the protocol)",
                "name": "custom XXXXXX"
            },
            {
                "description": "Change current input source",
                "name": "source X"
            },
            {
                "description": "Set current volume",
                "name": "volume 50"
            },
            {
                "description": "Switch receiver on",
                "name": "power on"
            },
            {
                "description": "Switch receiver off",
                "name": "power off"
            }
        ]
    },
    "Axis": {
        "description": " Axis IP Camera/Encoder. Camera can be viewed directly inside calaos and used in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "Resolution to use",
                "mandatory": "false",
                "name": "resolution",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "",
                "mandatory": "false",
                "name": "tilt_framesize",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "",
                "mandatory": "false",
                "name": "pan_framesize",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "",
                "mandatory": "false",
                "name": "zoom_step",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "Set to true if camera has PTZ support",
                "mandatory": "false",
                "name": "ptz",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Camera model/chanel to use",
                "mandatory": "true",
                "name": "model",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "BlinkstickOutputLightRGB": {
        "description": "RGB Light dimmer using a Blinkstick RGB light. Choose a color to be set for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "Blinkstick serial to control",
                "mandatory": "true",
                "name": "serial",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "1",
                "description": "Number of LEDs to control with the blinkstick",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "nb_leds",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "Gadspot": {
        "description": " Gadspot IP Camera. Camera can be viewed directly inside calaos and used in rules.",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "GpioInputSwitch": {
        "description": "Input switch with a GPIO Basic switch with press/release states.",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "Set this if your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "GPIO ID on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is pressed",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is released",
                "name": "false"
            }
        ],
        "actions": []
    },
    "GpioInputSwitchLongPress": {
        "description": "Input switch with a GPIO Long press switch. This switch supports single press and long press. User has 500ms to perform the long press.",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "Set this is your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "GPIO ID on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is pressed quickly",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is pressed at least for 500ms (long press)",
                "name": "2"
            }
        ],
        "actions": []
    },
    "GpioInputSwitchTriple": {
        "description": "Input switch with a GPIO Triple click switch. This switch can start 3 kind of actions. User has 500ms to do a multiple click.",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "Set this is your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "GPIO ID on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is triple clicked",
                "name": "3"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is single clicked",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is double clicked",
                "name": "2"
            }
        ],
        "actions": []
    },
    "GpioOutputShutter": {
        "description": "Shutter with 2 GPIOs Simple shutter. This shutter supports open/close states, as well as impulse shutters.",
        "alias": [],
        "parameters": [
            {
                "default": "0",
                "description": "GPIO ID for closing on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Set this is your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low_up",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "GPIO ID for opening on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "Set this is your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low_down",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to open or close",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            }
        ]
    },
    "GpioOutputShutterSmart": {
        "description": "Shutter with 2 GPIOs Smart shutter. This shutter calculates the position of the shutter based on the time it takes to open and close. It then allows to set directly the shutter at a specified position.",
        "alias": [],
        "parameters": [
            {
                "default": "0",
                "description": "GPIO ID for closing on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Set this is your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low_up",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "GPIO ID for opening on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "Set this is your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low_down",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to fully closed. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to be fully open. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            },
            {
                "description": "Set shutter at position X in percent",
                "name": "set 50"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Open the shutter by X percent",
                "name": "up 5"
            },
            {
                "description": "Start calibration on shutter. This opens fully the shutter and resets all internal position values. Use this if shutter sync is lost.",
                "name": "calibrate"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Close the shutter by X percent",
                "name": "down 5"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            }
        ]
    },
    "GpioOutputSwitch": {
        "description": "Light with a GPIO Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "Set this is your GPIO has an inverted level",
                "mandatory": "false",
                "name": "active_low",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "GPIO ID on your hardware",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "gpio",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "HueOutputLightRGB": {
        "description": "RGB Light dimmer using a Philips Hue RGB light. Choose a color to be set for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "Unique ID describing the Hue Light. This value is returned by the Hue Wizard.",
                "mandatory": "true",
                "name": "id_hue",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "API key return by Hue bridge when assciation has been made. Use Hue Wizard in calaos_installer to get this value automatically.",
                "mandatory": "true",
                "name": "api",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Hue bridge IP address",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "InputTime": {
        "description": "Basic time input. An event is triggered when the current time equals the configured time. A specific date can also be set.",
        "alias": [],
        "parameters": [
            {
                "default": "0",
                "description": "Day for this time input",
                "mandatory": "false",
                "max": "31",
                "min": "1",
                "name": "day",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Month for this time input",
                "mandatory": "false",
                "max": "12",
                "min": "1",
                "name": "month",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Seconds for this time input",
                "mandatory": "true",
                "max": "59",
                "min": "0",
                "name": "sec",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "A time object can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Year for this time input",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "year",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Minutes for this time input",
                "mandatory": "true",
                "max": "59",
                "min": "0",
                "name": "min",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Hour for this time input",
                "mandatory": "true",
                "max": "23",
                "min": "0",
                "name": "hour",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when current time equals",
                "name": "true"
            },
            {
                "description": "Event on any change of time",
                "name": "changed"
            },
            {
                "description": "Event triggered when current time is not equal",
                "name": "false"
            }
        ],
        "actions": []
    },
    "InputTimer": {
        "description": "Timer object. trigger an event after the configured time has expired.",
        "alias": [],
        "parameters": [
            {
                "description": "Auto restart the timer when time expires",
                "mandatory": "true",
                "name": "autorestart",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Auto start the timer when calaos starts",
                "mandatory": "true",
                "name": "autostart",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Seconds for the timer interval",
                "mandatory": "true",
                "max": "59",
                "min": "0",
                "name": "sec",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "A timer object can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Miliseconds for the timer interval",
                "mandatory": "true",
                "max": "999",
                "min": "0",
                "name": "msec",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Minutes for the timer interval",
                "mandatory": "true",
                "max": "59",
                "min": "0",
                "name": "min",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Hour for the timer interval",
                "mandatory": "true",
                "max": "23",
                "min": "0",
                "name": "hour",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered on any change",
                "name": "change"
            },
            {
                "description": "Event triggered when timer expires",
                "name": "true"
            },
            {
                "description": "Event triggered when timer starts",
                "name": "false"
            }
        ],
        "actions": [
            {
                "description": "Reset the configured time to a value. Format is h:m:s:ms",
                "name": "00:00:00:200"
            },
            {
                "description": "Start the timer",
                "name": "start"
            },
            {
                "description": "Stop the timer",
                "name": "stop"
            }
        ]
    },
    "InternalBool": {
        "description": "Internal boolean object. This object is useful for doing internal programing in rules, like keeping boolean states, or displaying boolean values",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "Automatically save the value in cache. The value will be reloaded when restarting calaos is true. Default to false",
                "mandatory": "false",
                "name": "save",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "Enable edit mode for this object. It allows user to modify the value on interfaces. Default to false",
                "mandatory": "false",
                "name": "rw",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when value is true",
                "name": "true"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when value is false",
                "name": "false"
            }
        ],
        "actions": [
            {
                "description": "Do an impulse on boolean value. Set to true for X ms then reset to false",
                "name": "impulse 200"
            },
            {
                "description": "Do an impulse on boolean value with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Invert boolean value",
                "name": "toggle"
            },
            {
                "description": "Set a value to true",
                "name": "true"
            },
            {
                "description": "Set a value to false",
                "name": "false"
            }
        ]
    },
    "InternalInt": {
        "description": "Internal number object. This object is useful for doing internal programing in rules, like counters, of displaying values.",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "Automatically save the value in cache. The value will be reloaded when restarting calaos is true. Default to false",
                "mandatory": "false",
                "name": "save",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Set a step for increment/decrement value. Default is 1.0",
                "mandatory": "false",
                "name": "step",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "Enable edit mode for this object. It allows user to modify the value on interfaces. Default to false",
                "mandatory": "false",
                "name": "rw",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific number value",
                "name": "0"
            }
        ],
        "actions": [
            {
                "description": "Decrement value by value",
                "name": "dec 1"
            },
            {
                "description": "Increment value by value",
                "name": "inc 1"
            },
            {
                "description": "Decrement value with configured step",
                "name": "dec"
            },
            {
                "description": "Set a specific number value",
                "name": "0"
            },
            {
                "description": "Increment value with configured step",
                "name": "inc"
            }
        ]
    },
    "InternalString": {
        "description": "Internal string object. This object is useful for doing internal programing in rules or displaying text values on user interfaces.",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "Automatically save the value in cache. The value will be reloaded when restarting calaos is true. Default to false",
                "mandatory": "false",
                "name": "save",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "Enable edit mode for this object. It allows user to modify the value on interfaces. Default to false",
                "mandatory": "false",
                "name": "rw",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific string value",
                "name": "value"
            }
        ],
        "actions": [
            {
                "description": "Set a specific string value",
                "name": "value"
            }
        ]
    },
    "KNXInputAnalog": {
        "description": "Input analog with KNX and eibnetmux An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "KNXInputSwitch": {
        "description": "Input switch with KNX and eibnetmux Basic switch with press/release states.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is pressed",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is released",
                "name": "false"
            }
        ],
        "actions": []
    },
    "KNXInputSwitchLongPress": {
        "description": "Input switch long press with KNX and eibnetmux Long press switch. This switch supports single press and long press. User has 500ms to perform the long press.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is pressed quickly",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is pressed at least for 500ms (long press)",
                "name": "2"
            }
        ],
        "actions": []
    },
    "KNXInputSwitchTriple": {
        "description": "Input switch triple with KNX and eibnetmux Triple click switch. This switch can start 3 kind of actions. User has 500ms to do a multiple click.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is triple clicked",
                "name": "3"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is single clicked",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is double clicked",
                "name": "2"
            }
        ],
        "actions": []
    },
    "KNXInputTemp": {
        "description": "Input temperature with KNX and eibnetmux Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    },
    "KNXOutputAnalog": {
        "description": "Analog output with KNX and eibnetmux Analog output. Useful to control analog output devices connected to calaos.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Set a step for increment/decrement value. Default is 1.0",
                "mandatory": "false",
                "name": "step",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on a specific number value",
                "name": "0"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrement value by value",
                "name": "dec 1"
            },
            {
                "description": "Increment value by value",
                "name": "inc 1"
            },
            {
                "description": "Decrement value with configured step",
                "name": "dec"
            },
            {
                "description": "Set a specific number value",
                "name": "0"
            },
            {
                "description": "Increment value with configured step",
                "name": "inc"
            }
        ]
    },
    "KNXOutputLight": {
        "description": "Light output with KNX and eibnetmux Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "KNXOutputLightDimmer": {
        "description": "Light dimmer with KNX and eibnetmux Light with dimming control. Light intensity can be changed for this light.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Dynamically change light intensity when holding a switch (stop action)",
                "name": "hold stop"
            },
            {
                "description": "Dynamically change light intensity when holding a switch (press action)",
                "name": "hold press"
            },
            {
                "description": "Decrease intensity by X percent",
                "name": "down 5"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Set light value without switching on. This will be the light intensity for the next ON",
                "name": "set off 50"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state 50"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Invert the light state",
                "name": "toggle"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Increase intensity by X percent",
                "name": "up 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            },
            {
                "description": "Set light intensity and swith on if light is off",
                "name": "set 50"
            }
        ]
    },
    "KNXOutputLightRGB": {
        "description": "Light RGB with KNX and eibnetmux RGB light. Choose a color to be set for this light.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Blue Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group_blue",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Green Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group_green",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Red Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group_red",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Green channel KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group_green",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Blue channel KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group_blue",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Red channel KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group_red",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "KNXOutputShutter": {
        "description": "Shutter with with KNX and eibnetmux Simple shutter. This shutter supports open/close states, as well as impulse shutters.",
        "alias": [],
        "parameters": [
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Up KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group_up",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Down KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group_down",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to open or close",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            }
        ]
    },
    "KNXOutputShutterSmart": {
        "description": "Shutter with with KNX and eibnetmux Smart shutter. This shutter calculates the position of the shutter based on the time it takes to open and close. It then allows to set directly the shutter at a specified position.",
        "alias": [],
        "parameters": [
            {
                "description": "KNX Group address for listening status, Ex: x/y/z",
                "mandatory": "false",
                "name": "listen_knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "127.0.0.1",
                "description": "Hostname of knxd, default to localhost",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Up KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group_up",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Down KNX Group address, Ex: x/y/z",
                "mandatory": "true",
                "name": "knx_group_down",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to fully closed. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to be fully open. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "Send a read request at start to get the current value. Default is false",
                "mandatory": "true",
                "name": "read_at_start",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "6",
                "description": "KNX EIS (Data type)",
                "mandatory": "false",
                "max": "15",
                "min": "0",
                "name": "eis",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            },
            {
                "description": "Set shutter at position X in percent",
                "name": "set 50"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Open the shutter by X percent",
                "name": "up 5"
            },
            {
                "description": "Start calibration on shutter. This opens fully the shutter and resets all internal position values. Use this if shutter sync is lost.",
                "name": "calibrate"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Close the shutter by X percent",
                "name": "down 5"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            }
        ]
    },
    "MilightOutputLightRGB": {
        "description": "RGB light support for Limitless/Milight RGB bulbs. RGB light. Choose a color to be set for this light.",
        "alias": [],
        "parameters": [
            {
                "default": "0",
                "description": "Zone to control. Each gateway supports 4 zones.",
                "mandatory": "true",
                "max": "4",
                "min": "0",
                "name": "zone",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Milight wifi gateway IP address",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Gateway port, default to 8899",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "MqttInputAnalog": {
        "description": "Temperature read from a mqtt broker An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Topic on witch to publish.",
                "mandatory": "true",
                "name": "topic_pub",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "User to use for authentication with mqtt broker. Password must be defined in that case.",
                "mandatory": "false",
                "name": "user",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1883",
                "description": "TCP port of the mqtt broker. Default value is 1883",
                "mandatory": "false",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Topic on witch to subscribe.",
                "mandatory": "true",
                "name": "topic_sub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The path where to found the value in the mqtt payload. If payload if JSON, informations will be extracted depending on the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object. if payload is somple json, just try to use the key of the value you want to read, for example : {\"temperature\":14.23} use \"temperature\" as path\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "127.0.0.1",
                "description": "IP address of the mqtt broker to connect to. Default value is 127.0.0.1.",
                "mandatory": "false",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "120",
                "description": "keepalive timeout in seconds. Time between two mqtt PING.",
                "mandatory": "false",
                "name": "keepalive",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Password to use for authentication with mqtt broker. User must be defined in that case.",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "MqttInputString": {
        "description": "Temperature read from a mqtt broker",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value in the mqtt payload. If payload if JSON, informations will be extracted depending on the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object. if payload is somple json, just try to use the key of the value you want to read, for example : {\"temperature\":14.23} use \"temperature\" as path\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "User to use for authentication with mqtt broker. Password must be defined in that case.",
                "mandatory": "false",
                "name": "user",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Password to use for authentication with mqtt broker. User must be defined in that case.",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1883",
                "description": "TCP port of the mqtt broker. Default value is 1883",
                "mandatory": "false",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "120",
                "description": "keepalive timeout in seconds. Time between two mqtt PING.",
                "mandatory": "false",
                "name": "keepalive",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Topic on witch to subscribe.",
                "mandatory": "true",
                "name": "topic_sub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Topic on witch to publish.",
                "mandatory": "true",
                "name": "topic_pub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "127.0.0.1",
                "description": "IP address of the mqtt broker to connect to. Default value is 127.0.0.1.",
                "mandatory": "false",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "MqttInputSwitch": {
        "description": "Switch value readed from a mqtt broker Basic switch with press/release states.",
        "alias": [],
        "parameters": [
            {
                "description": "Value to interpret as OFF value",
                "mandatory": "true",
                "name": "off_value",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Value to interpret as ON value",
                "mandatory": "true",
                "name": "on_value",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The path where to found the value in the mqtt payload. If payload if JSON, informations will be extracted depending on the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object. if payload is somple json, just try to use the key of the value you want to read, for example : {\"temperature\":14.23} use \"temperature\" as path\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "User to use for authentication with mqtt broker. Password must be defined in that case.",
                "mandatory": "false",
                "name": "user",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Password to use for authentication with mqtt broker. User must be defined in that case.",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1883",
                "description": "TCP port of the mqtt broker. Default value is 1883",
                "mandatory": "false",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "120",
                "description": "keepalive timeout in seconds. Time between two mqtt PING.",
                "mandatory": "false",
                "name": "keepalive",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Topic on witch to subscribe.",
                "mandatory": "true",
                "name": "topic_sub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Topic on witch to publish.",
                "mandatory": "true",
                "name": "topic_pub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "127.0.0.1",
                "description": "IP address of the mqtt broker to connect to. Default value is 127.0.0.1.",
                "mandatory": "false",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is pressed",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is released",
                "name": "false"
            }
        ],
        "actions": []
    },
    "MqttInputTemp": {
        "description": "Temperature read from a mqtt broker Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value in the mqtt payload. If payload if JSON, informations will be extracted depending on the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object. if payload is somple json, just try to use the key of the value you want to read, for example : {\"temperature\":14.23} use \"temperature\" as path\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Password to use for authentication with mqtt broker. User must be defined in that case.",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "120",
                "description": "keepalive timeout in seconds. Time between two mqtt PING.",
                "mandatory": "false",
                "name": "keepalive",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "127.0.0.1",
                "description": "IP address of the mqtt broker to connect to. Default value is 127.0.0.1.",
                "mandatory": "false",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1883",
                "description": "TCP port of the mqtt broker. Default value is 1883",
                "mandatory": "false",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Topic on witch to subscribe.",
                "mandatory": "true",
                "name": "topic_sub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Topic on witch to publish.",
                "mandatory": "true",
                "name": "topic_pub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "User to use for authentication with mqtt broker. Password must be defined in that case.",
                "mandatory": "false",
                "name": "user",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    },
    "MqttOutputAnalog": {
        "description": "Control analog output through mqtt broker Analog output. Useful to control analog output devices connected to calaos.",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value in the mqtt payload. If payload if JSON, informations will be extracted depending on the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object. if payload is somple json, just try to use the key of the value you want to read, for example : {\"temperature\":14.23} use \"temperature\" as path\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Password to use for authentication with mqtt broker. User must be defined in that case.",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "120",
                "description": "keepalive timeout in seconds. Time between two mqtt PING.",
                "mandatory": "false",
                "name": "keepalive",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "127.0.0.1",
                "description": "IP address of the mqtt broker to connect to. Default value is 127.0.0.1.",
                "mandatory": "false",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1883",
                "description": "TCP port of the mqtt broker. Default value is 1883",
                "mandatory": "false",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Topic on witch to subscribe.",
                "mandatory": "true",
                "name": "topic_sub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Topic on witch to publish.",
                "mandatory": "true",
                "name": "topic_pub",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Set a step for increment/decrement value. Default is 1.0",
                "mandatory": "false",
                "name": "step",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "User to use for authentication with mqtt broker. Password must be defined in that case.",
                "mandatory": "false",
                "name": "user",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on a specific number value",
                "name": "0"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrement value by value",
                "name": "dec 1"
            },
            {
                "description": "Increment value by value",
                "name": "inc 1"
            },
            {
                "description": "Decrement value with configured step",
                "name": "dec"
            },
            {
                "description": "Set a specific number value",
                "name": "0"
            },
            {
                "description": "Increment value with configured step",
                "name": "inc"
            }
        ]
    },
    "MqttOutputLight": {
        "description": "Control lights through mqtt broker Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [],
        "parameters": [
            {
                "description": "Value to interpret as OFF value",
                "mandatory": "true",
                "name": "off_value",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Value to interpret as ON value",
                "mandatory": "true",
                "name": "on_value",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The path where to found the value in the mqtt payload. If payload if JSON, informations will be extracted depending on the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object. if payload is somple json, just try to use the key of the value you want to read, for example : {\"temperature\":14.23} use \"temperature\" as path\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "User to use for authentication with mqtt broker. Password must be defined in that case.",
                "mandatory": "false",
                "name": "user",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Password to use for authentication with mqtt broker. User must be defined in that case.",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "120",
                "description": "keepalive timeout in seconds. Time between two mqtt PING.",
                "mandatory": "false",
                "name": "keepalive",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1883",
                "description": "TCP port of the mqtt broker. Default value is 1883",
                "mandatory": "false",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Topic on witch to subscribe.",
                "mandatory": "true",
                "name": "topic_sub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Topic on witch to publish.",
                "mandatory": "true",
                "name": "topic_pub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            },
            {
                "default": "127.0.0.1",
                "description": "IP address of the mqtt broker to connect to. Default value is 127.0.0.1.",
                "mandatory": "false",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "MqttOutputLightDimmer": {
        "description": "Control lights through mqtt broker Light with dimming control. Light intensity can be changed for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value in the mqtt payload. If payload if JSON, informations will be extracted depending on the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object. if payload is somple json, just try to use the key of the value you want to read, for example : {\"temperature\":14.23} use \"temperature\" as path\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "User to use for authentication with mqtt broker. Password must be defined in that case.",
                "mandatory": "false",
                "name": "user",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Password to use for authentication with mqtt broker. User must be defined in that case.",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1883",
                "description": "TCP port of the mqtt broker. Default value is 1883",
                "mandatory": "false",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "120",
                "description": "keepalive timeout in seconds. Time between two mqtt PING.",
                "mandatory": "false",
                "name": "keepalive",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Topic on witch to subscribe.",
                "mandatory": "true",
                "name": "topic_sub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Topic on witch to publish.",
                "mandatory": "true",
                "name": "topic_pub",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "127.0.0.1",
                "description": "IP address of the mqtt broker to connect to. Default value is 127.0.0.1.",
                "mandatory": "false",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Dynamically change light intensity when holding a switch (stop action)",
                "name": "hold stop"
            },
            {
                "description": "Dynamically change light intensity when holding a switch (press action)",
                "name": "hold press"
            },
            {
                "description": "Decrease intensity by X percent",
                "name": "down 5"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Set light value without switching on. This will be the light intensity for the next ON",
                "name": "set off 50"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state 50"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Invert the light state",
                "name": "toggle"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Increase intensity by X percent",
                "name": "up 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            },
            {
                "description": "Set light intensity and swith on if light is off",
                "name": "set 50"
            }
        ]
    },
    "MySensorsInputAnalog": {
        "description": "Analog measurement with MySensors node An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "MySensorsInputString": {
        "description": "Display string from MySensors node",
        "alias": [],
        "parameters": [
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "MySensorsInputSwitch": {
        "description": "Input switch with MySensors node Basic switch with press/release states.",
        "alias": [],
        "parameters": [
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is pressed",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is released",
                "name": "false"
            }
        ],
        "actions": []
    },
    "MySensorsInputSwitchLongPress": {
        "description": "Input long press switch with MySensors node Long press switch. This switch supports single press and long press. User has 500ms to perform the long press.",
        "alias": [],
        "parameters": [
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is pressed quickly",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is pressed at least for 500ms (long press)",
                "name": "2"
            }
        ],
        "actions": []
    },
    "MySensorsInputSwitchTriple": {
        "description": "Input triple click switch with MySensors node Triple click switch. This switch can start 3 kind of actions. User has 500ms to do a multiple click.",
        "alias": [],
        "parameters": [
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is triple clicked",
                "name": "3"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is single clicked",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is double clicked",
                "name": "2"
            }
        ],
        "actions": []
    },
    "MySensorsInputTemp": {
        "description": "Temperature sensor with MySensors node Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [],
        "parameters": [
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    },
    "MySensorsOutputAnalog": {
        "description": "Analog output with MySensors node Analog output. Useful to control analog output devices connected to calaos.",
        "alias": [],
        "parameters": [
            {
                "description": "Data type sent to the node. Default: V_DIMMER, see MySensors.cpp for more values.",
                "mandatory": "false",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Set a step for increment/decrement value. Default is 1.0",
                "mandatory": "false",
                "name": "step",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on a specific number value",
                "name": "0"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrement value by value",
                "name": "dec 1"
            },
            {
                "description": "Increment value by value",
                "name": "inc 1"
            },
            {
                "description": "Decrement value with configured step",
                "name": "dec"
            },
            {
                "description": "Set a specific number value",
                "name": "0"
            },
            {
                "description": "Increment value with configured step",
                "name": "inc"
            }
        ]
    },
    "MySensorsOutputDimmer": {
        "description": "Light dimmer with MySensors node Light with dimming control. Light intensity can be changed for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "Data type sent to the node. Default: V_DIMMER, see MySensors.cpp for more values.",
                "mandatory": "false",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Dynamically change light intensity when holding a switch (stop action)",
                "name": "hold stop"
            },
            {
                "description": "Dynamically change light intensity when holding a switch (press action)",
                "name": "hold press"
            },
            {
                "description": "Decrease intensity by X percent",
                "name": "down 5"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Set light value without switching on. This will be the light intensity for the next ON",
                "name": "set off 50"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state 50"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Invert the light state",
                "name": "toggle"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Increase intensity by X percent",
                "name": "up 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            },
            {
                "description": "Set light intensity and swith on if light is off",
                "name": "set 50"
            }
        ]
    },
    "MySensorsOutputLight": {
        "description": "Light/relay with MySensors node Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [],
        "parameters": [
            {
                "description": "Data type sent to the node. Default: V_LIGHT, see MySensors.cpp for more values.",
                "mandatory": "false",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "MySensorsOutputLightRGB": {
        "description": "RGB Light dimmer with MySensors node RGB light. Choose a color to be set for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "Data type sent to the node. Default: V_DIMMER, see MySensors.cpp for more values.",
                "mandatory": "false",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID blue red channel, as set in your node",
                "mandatory": "true",
                "name": "sensor_id_blue",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID green red channel, as set in your node",
                "mandatory": "true",
                "name": "sensor_id_green",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID for green channel, as set in your network",
                "mandatory": "true",
                "name": "node_id_green",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID for red channel, as set in your node",
                "mandatory": "true",
                "name": "sensor_id_red",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID for red channel, as set in your network",
                "mandatory": "true",
                "name": "node_id_red",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID for blue channel, as set in your network",
                "mandatory": "true",
                "name": "node_id_blue",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "MySensorsOutputShutter": {
        "description": "Shutter with MySensors node Simple shutter. This shutter supports open/close states, as well as impulse shutters.",
        "alias": [],
        "parameters": [
            {
                "description": "Data type sent to the node. Default: V_LIGHT, see MySensors.cpp for more values.",
                "mandatory": "false",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID for closing shutter, as set in your node",
                "mandatory": "true",
                "name": "sensor_id_down",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID for opening shutter, as set in your network",
                "mandatory": "true",
                "name": "node_id_up",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID for opening shutter, as set in your node",
                "mandatory": "true",
                "name": "sensor_id_up",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Node ID for closing shutter, as set in your network",
                "mandatory": "true",
                "name": "node_id_down",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to open or close",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            }
        ]
    },
    "MySensorsOutputShutterSmart": {
        "description": "Smart shutter with MySensors node Smart shutter. This shutter calculates the position of the shutter based on the time it takes to open and close. It then allows to set directly the shutter at a specified position.",
        "alias": [],
        "parameters": [
            {
                "description": "Data type sent to the node. Default: V_LIGHT, see MySensors.cpp for more values.",
                "mandatory": "false",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID for closing shutter, as set in your node",
                "mandatory": "true",
                "name": "sensor_id_down",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID for opening shutter, as set in your network",
                "mandatory": "true",
                "name": "node_id_up",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID for opening shutter, as set in your node",
                "mandatory": "true",
                "name": "sensor_id_up",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to fully closed. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Node ID for closing shutter, as set in your network",
                "mandatory": "true",
                "name": "node_id_down",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to be fully open. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            },
            {
                "description": "Set shutter at position X in percent",
                "name": "set 50"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Open the shutter by X percent",
                "name": "up 5"
            },
            {
                "description": "Start calibration on shutter. This opens fully the shutter and resets all internal position values. Use this if shutter sync is lost.",
                "name": "calibrate"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Close the shutter by X percent",
                "name": "down 5"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            }
        ]
    },
    "MySensorsOutputString": {
        "description": "String output with MySensors node",
        "alias": [],
        "parameters": [
            {
                "description": "Data type sent to the node. Default: V_VAR1, see MySensors.cpp for more values.",
                "mandatory": "false",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sensor ID, as set in your node",
                "mandatory": "true",
                "name": "sensor_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "serial",
                "description": "Gateway type used, tcp or serial are supported",
                "mandatory": "true",
                "name": "gateway",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "serial": "Serial",
                    "tcp": "TCP"
                }
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "/dev/ttyUSB0",
                "description": "If using serial gateway, port is the serial port (/dev/ttyUSB0 for ex.). If using tcp gateway port is TCP port of the gateway.",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Node ID as set in your network",
                "mandatory": "true",
                "name": "node_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IP address of the tcp gateway if relevant",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "OLAOutputLightDimmer": {
        "description": "DMX Light dimmer using OLA (Open Lighting Architecture) Light with dimming control. Light intensity can be changed for this light.",
        "alias": [],
        "parameters": [
            {
                "default": "0",
                "description": "OLA universe to control",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "universe",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "DMX channel to control",
                "mandatory": "true",
                "max": "512",
                "min": "0",
                "name": "channel",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Dynamically change light intensity when holding a switch (stop action)",
                "name": "hold stop"
            },
            {
                "description": "Dynamically change light intensity when holding a switch (press action)",
                "name": "hold press"
            },
            {
                "description": "Decrease intensity by X percent",
                "name": "down 5"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Set light value without switching on. This will be the light intensity for the next ON",
                "name": "set off 50"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state 50"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Invert the light state",
                "name": "toggle"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Increase intensity by X percent",
                "name": "up 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            },
            {
                "description": "Set light intensity and swith on if light is off",
                "name": "set 50"
            }
        ]
    },
    "OLAOutputLightRGB": {
        "description": "RGB Light dimmer using 3 DMX channels with OLA (Open Lighting Architecture) RGB light. Choose a color to be set for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "DMX channel for blue to control",
                "mandatory": "true",
                "max": "512",
                "min": "0",
                "name": "channel_blue",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "OLA universe to control",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "universe",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "DMX channel for green to control",
                "mandatory": "true",
                "max": "512",
                "min": "0",
                "name": "channel_green",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "DMX channel for red to control",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "channel_red",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "OutputFake": {
        "description": "Fake test output. Do nothing. Do not use.",
        "alias": [],
        "parameters": [
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "OWTemp": {
        "description": "Temperature measurement with DS18B20 Onewire Sensor Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [],
        "parameters": [
            {
                "description": "Additional parameter used for owfs initialization.For example you can use -u to use the USB owfs drivers",
                "mandatory": "true",
                "name": "ow_args",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID of sensor on OneWire bus.",
                "mandatory": "true",
                "name": "ow_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Force the use of w1 kernel driver instead of OneWire driver",
                "mandatory": "false",
                "name": "use_w1",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    },
    "PingInputSwitch": {
        "description": "A switch input based on the result of a ping command. Useful to detect presence of a host on the network. Basic switch with press/release states.",
        "alias": [],
        "parameters": [
            {
                "default": "15000",
                "description": "Interval between pings in ms. Default to 15 sec",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Timeout of the ping request in ms",
                "mandatory": "false",
                "name": "timeout",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IP address or host where to send the ping",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "The host is online and respond to the ping",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "The host is offline and/or does not respond to the ping",
                "name": "false"
            }
        ],
        "actions": []
    },
    "Planet": {
        "description": " Planet IP Camera/Encoder. Camera can be viewed directly inside calaos and used in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "Password for user",
                "mandatory": "false",
                "name": "password",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Username for accessing the camera",
                "mandatory": "false",
                "name": "username",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Camera model (ICA-210, ICA-210W, ICA-300, ICA-302, ICA-500) to use",
                "mandatory": "true",
                "name": "model",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "Scenario": {
        "description": "A scenario variable. Use this like a virtual button to start a scenario (list of actions)",
        "alias": [],
        "parameters": [
            {
                "description": "Internal use only for Auto Scenario. read only.",
                "mandatory": "false",
                "name": "auto_scenario",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when scenario is started",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Start the scenario",
                "name": "true"
            },
            {
                "description": "Event triggered on any change",
                "name": "changed"
            },
            {
                "description": "Stop the scenario (only for special looping scenarios)",
                "name": "false"
            }
        ]
    },
    "Squeezebox": {
        "description": "Squeezebox audio player allows control of a Squeezebox from Calaos",
        "alias": [
            "slim"
        ],
        "parameters": [
            {
                "default": "9000",
                "description": "Web interface port of LMS, default to 9000.",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port_web",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "9090",
                "description": "CLI port of LMS, default to 9090",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port_cli",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Logitech media server IP address",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID of squeezebox in LMS",
                "mandatory": "true",
                "name": "id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Audio players are not displayed in rooms",
                "mandatory": "true",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when a change of volume happens",
                "name": "onvolumechange"
            },
            {
                "description": "Event when pausing player",
                "name": "onpause"
            },
            {
                "description": "Event when stopping player",
                "name": "onstop"
            },
            {
                "description": "Event when play is started",
                "name": "onplay"
            },
            {
                "description": "Event when a change in the current playlist happens",
                "name": "onplaylistchange"
            },
            {
                "description": "Event when a new song is being played",
                "name": "onsongchange"
            }
        ],
        "actions": [
            {
                "description": "Add tracks to playlist. <argument> can be any of album_id:XX artist_id:XX playlist_id:XX, ...",
                "name": "add <argument>"
            },
            {
                "description": "Clear playlist and play argument. <argument> can be any of album_id:XX artist_id:XX playlist_id:XX, ...",
                "name": "play <argument>"
            },
            {
                "description": "Sync this player with an other",
                "name": "sync <playerid>"
            },
            {
                "description": "Play previous song in playlist",
                "name": "previous"
            },
            {
                "description": "Switch player off",
                "name": "power off"
            },
            {
                "description": "Decrease volume by a value",
                "name": "volume down 1"
            },
            {
                "description": "Stop sync of this player with an other",
                "name": "unsync <playerid>"
            },
            {
                "description": "Start playing",
                "name": "play"
            },
            {
                "description": "Stop player",
                "name": "stop"
            },
            {
                "description": "Pause player",
                "name": "pause"
            },
            {
                "description": "Set current volume",
                "name": "volume set 50"
            },
            {
                "description": "Play next song in playlist",
                "name": "next"
            },
            {
                "description": "Start sleep mode with X seconds",
                "name": "sleep 10"
            },
            {
                "description": "Increase volume by a value",
                "name": "volume up 1"
            },
            {
                "description": "Switch player on",
                "name": "power on"
            }
        ]
    },
    "standard_mjpeg": {
        "description": " MJPEG/Jpeg IP Camera. Camera can be viewed directly inside calaos and used in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "URL for mjpeg stream support",
                "mandatory": "false",
                "name": "url_mjpeg",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Set to true if camera has PTZ support",
                "mandatory": "false",
                "name": "ptz",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "URL for snapshot in jpeg format",
                "mandatory": "true",
                "name": "url_jpeg",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "StandardMjpeg": {
        "description": " MJPEG/Jpeg IP Camera. Camera can be viewed directly inside calaos and used in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "URL for mjpeg stream support",
                "mandatory": "false",
                "name": "url_mjpeg",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "Set to true if camera has PTZ support",
                "mandatory": "false",
                "name": "ptz",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "URL for snapshot in jpeg format",
                "mandatory": "true",
                "name": "url_jpeg",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "SynoSurveillanceStation": {
        "description": " Synology Surveillance Station IP Camera. Camera can be viewed directly inside calaos and used in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Profile to use for snapshot. 0- High quality, 1- Balanced, 2- Low bandwidth",
                "mandatory": "false",
                "max": "2",
                "min": "0",
                "name": "camera_profile",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "ID of the camera",
                "mandatory": "true",
                "name": "camera_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Full url to Synology nas. Ex: https://192.168.0.22:5000",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Username which can access Surveillance Station",
                "mandatory": "true",
                "name": "username",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Password for user",
                "mandatory": "true",
                "name": "password",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "TeleinfoInputAnalog": {
        "description": "Analog measurement retrieved from Teleinfo informations. An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [],
        "parameters": [
            {
                "default": "PAPP",
                "description": "All theses values are reported by the Teleinfo equipment as double.",
                "mandatory": "true",
                "name": "value",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "BASE": "Index if optione BASE is subscribed. (in Watt-hour)",
                    "BBRHCJB": "Index \"Heures creuses jours bleues\" if otion \"Tempo\" is subscribed. (in Watt-hour)",
                    "BBRHCJR": "Index \"Heures creuses jours rouges\" if otion \"Tempo\" is subscribed. (in Watt-hour)",
                    "BBRHCJW": "Index \"Heures creuses jours blancs\" if otion \"Tempo\" is subscribed. (in Watt-hour)",
                    "BBRHPJB": "Index \"Heures pleines jours bleues\" if otion \"Tempo\" is subscribed. (in Watt-hour)",
                    "BBRHPJR": "Index \"Heures pleines jours rouges\" if otion \"Tempo\" is subscribed. (in Watt-hour)",
                    "BBRHPJW": "Index \"Heures pleines jours blancs\" if otion \"Tempo\" is subscribed. (in Watt-hour)",
                    "EJPHN": "Index \"Heures Normales\" if otion \"EJP\" is subscribed. (in Watt-hour)",
                    "EJPHPM": "Index \"Heures de pointe mobile\" if otion \"EJP\" is subscribed. (in Watt-hour)",
                    "HCHC": "Index \"Heures Creuses\" if this option is subscribed. (in Watt-hour)",
                    "HCHP": "Index \"Heures Pleine\" if option \"Heures Creuses\" is subscribed. (in Watt-hour)",
                    "IINST": "Instant intensity. (in Ampere)",
                    "IMAX": "Maximal intensity. (in Ampere)",
                    "ISOUSC": "Subscribed intensity. (in Ampere)",
                    "PAPP": "Apparent power. (in Volt-ampere)"
                }
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "port on which to get Teleinfo information usually a serial port like /dev/ttyS0 or /dev/ttyAMA0",
                "mandatory": "true",
                "name": "port",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "TimeRange": {
        "description": "Represent a time range object. A time range is true if current time is in one of the included range, false otherwise. The time range also support weekdays and months.",
        "alias": [
            "InPlageHoraire"
        ],
        "parameters": [
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "A time range can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when entering the range",
                "name": "true"
            },
            {
                "description": "Event on any change of range",
                "name": "changed"
            },
            {
                "description": "Event triggered when exiting the range",
                "name": "false"
            }
        ],
        "actions": []
    },
    "WebInputAnalog": {
        "description": "Analog input read from a web document An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value. This value can take multiple values depending on the file type. If file_type is JSON, the json file downloaded will be read, and the informations will be extracted from the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object.\nIf file_type is XML, the path is an xpath expression; Look here for syntax : http://www.w3schools.com/xsl/xpath_syntax.asp If file_type is TEXT, the downloaded file is returned as plain text file, and path must be in the form line/pos/separator Line is read, and is split using separator as delimiters The value returned is the value at pos in the split list. If the separator is not found, the whole line is returned. Example the file contains \n10.0,10.1,10.2,10.3\n20.0,20.1,20.2,20.3\nIf the path is 2/4/, the value returne wil be 20.3\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "File type of the document. Values can be xml, json or text.",
                "mandatory": "true",
                "name": "file_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "URL where to download the document from\nIf URL begins with / or with file:// the data is read from the local file",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "WebInputString": {
        "description": "String input providing from a web document",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value. This value can take multiple values depending on the file type. If file_type is JSON, the json file downloaded will be read, and the informations will be extracted from the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object.\nIf file_type is XML, the path is an xpath expression; Look here for syntax : http://www.w3schools.com/xsl/xpath_syntax.asp If file_type is TEXT, the downloaded file is returned as plain text file, and path must be in the form line/pos/separator Line is read, and is split using separator as delimiters The value returned is the value at pos in the split list. If the separator is not found, the whole line is returned. Example the file contains \n10.0,10.1,10.2,10.3\n20.0,20.1,20.2,20.3\nIf the path is 2/4/, the value returne wil be 20.3\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "URL where to download the document from\nIf URL begins with / or with file:// the data is read from the local file",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "File type of the document. Values can be xml, json or text.",
                "mandatory": "true",
                "name": "file_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "WebInputTemp": {
        "description": "Temperature input read from a web document Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value. This value can take multiple values depending on the file type. If file_type is JSON, the json file downloaded will be read, and the informations will be extracted from the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object.\nIf file_type is XML, the path is an xpath expression; Look here for syntax : http://www.w3schools.com/xsl/xpath_syntax.asp If file_type is TEXT, the downloaded file is returned as plain text file, and path must be in the form line/pos/separator Line is read, and is split using separator as delimiters The value returned is the value at pos in the split list. If the separator is not found, the whole line is returned. Example the file contains \n10.0,10.1,10.2,10.3\n20.0,20.1,20.2,20.3\nIf the path is 2/4/, the value returne wil be 20.3\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "File type of the document. Values can be xml, json or text.",
                "mandatory": "true",
                "name": "file_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "URL where to download the document from\nIf URL begins with / or with file:// the data is read from the local file",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    },
    "WebOutputAnalog": {
        "description": "Analog output in a web request Analog output. Useful to control analog output devices connected to calaos.",
        "alias": [],
        "parameters": [
            {
                "description": "The path where to found the value. This value can take multiple values depending on the file type. If file_type is JSON, the json file downloaded will be read, and the informations will be extracted from the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object.\nIf file_type is XML, the path is an xpath expression; Look here for syntax : http://www.w3schools.com/xsl/xpath_syntax.asp If file_type is TEXT, the downloaded file is returned as plain text file, and path must be in the form line/pos/separator Line is read, and is split using separator as delimiters The value returned is the value at pos in the split list. If the separator is not found, the whole line is returned. Example the file contains \n10.0,10.1,10.2,10.3\n20.0,20.1,20.2,20.3\nIf the path is 2/4/, the value returne wil be 20.3\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "File type of the document. Values can be xml, json or text.",
                "mandatory": "true",
                "name": "file_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "URL where to download the document from\nIf URL begins with / or with file:// the data is read from the local file",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Set a step for increment/decrement value. Default is 1.0",
                "mandatory": "false",
                "name": "step",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on a specific number value",
                "name": "0"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrement value by value",
                "name": "dec 1"
            },
            {
                "description": "Increment value by value",
                "name": "inc 1"
            },
            {
                "description": "Decrement value with configured step",
                "name": "dec"
            },
            {
                "description": "Set a specific number value",
                "name": "0"
            },
            {
                "description": "Increment value with configured step",
                "name": "inc"
            }
        ]
    },
    "WebOutputLight": {
        "description": "Bool output written to a web document or URL Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [],
        "parameters": [
            {
                "description": "The HTTP header Content-Type used when posting the document. It depends on the website, but you can use application/json application/xml as correct values.",
                "mandatory": "true",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            },
            {
                "description": "URL where to POST the document to. The POST request is associated with the data field if not null. When no data is provided, Calaos substitutes __##VALUE##__ string with the value to send. For example if the url is http://example.com/api?value=__##VALUE##__ the url post will be :\nhttp://example.com/api?value=20.3\nThe url is encoded before being sent.\nIf the URL begins with / or file:// the data is written to a file.",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The document send when posting data. This value can be void, in, that case the value is substituted in the url, otherwise the __##VALUE##__ contained in data is substituted with with the value to be sent.",
                "mandatory": "true",
                "name": "data",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "WebOutputLightRGB": {
        "description": "RGB value written to a web document or URL RGB light. Choose a color to be set for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "RGB value has #RRGGBB. Sometimes some web api take only RRGGBBformat. If raw_value is true, the # in front of the line isremoved. The default value for this parameter is false.",
                "mandatory": "false",
                "name": "raw_value",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "URL where to POST the document to. The POST request is associated with the data field if not null. When no data is provided, Calaos substitutes __##VALUE##__ string with the value to send. For example if the url is http://example.com/api?value=__##VALUE##__ the url post will be :\nhttp://example.com/api?value=20.3\nThe url is encoded before being sent.\nIf the URL begins with / or file:// the data is written to a file.",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The document send when posting data. This value can be void, in, that case the value is substituted in the url, otherwise the __##VALUE##__ contained in data is substituted with with the value to be sent.",
                "mandatory": "true",
                "name": "data",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The HTTP header Content-Type used when posting the document. It depends on the website, but you can use application/json application/xml as correct values.",
                "mandatory": "true",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "WebOutputString": {
        "description": "String output written to a web document or URL",
        "alias": [],
        "parameters": [
            {
                "description": "The HTTP header Content-Type used when posting the document. It depends on the website, but you can use application/json application/xml as correct values.",
                "mandatory": "true",
                "name": "data_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The document send when posting data. This value can be void, in, that case the value is substituted in the url, otherwise the __##VALUE##__ contained in data is substituted with with the value to be sent.",
                "mandatory": "true",
                "name": "data",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "File type of the document. Values can be xml, json or text.",
                "mandatory": "true",
                "name": "file_type",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "URL where to POST the document to. The POST request is associated with the data field if not null. When no data is provided, Calaos substitutes __##VALUE##__ string with the value to send. For example if the url is http://example.com/api?value=__##VALUE##__ the url post will be :\nhttp://example.com/api?value=20.3\nThe url is encoded before being sent.\nIf the URL begins with / or file:// the data is written to a file.",
                "mandatory": "true",
                "name": "url",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "The path where to found the value. This value can take multiple values depending on the file type. If file_type is JSON, the json file downloaded will be read, and the informations will be extracted from the path. for example weather[0]/description, try to read the description value of the 1 element of the array of the weather object.\nIf file_type is XML, the path is an xpath expression; Look here for syntax : http://www.w3schools.com/xsl/xpath_syntax.asp If file_type is TEXT, the downloaded file is returned as plain text file, and path must be in the form line/pos/separator Line is read, and is split using separator as delimiters The value returned is the value at pos in the split list. If the separator is not found, the whole line is returned. Example the file contains \n10.0,10.1,10.2,10.3\n20.0,20.1,20.2,20.3\nIf the path is 2/4/, the value returne wil be 20.3\n",
                "mandatory": "true",
                "name": "path",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "WIAnalog": {
        "description": "Analog measurement with Wago module (like 0-10V, 4-20mA, ...) An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [
            "WagoInputAnalog"
        ],
        "parameters": [
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "default": "0",
                "description": "PLC address of the input sensor",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "WIDigitalBP": {
        "description": "Switch with digital input Wago modules (like 750-1405, ...) Basic switch with press/release states.",
        "alias": [
            "WIDigital",
            "WagoInputSwitch"
        ],
        "parameters": [
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "PLC address of the digital input",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is pressed",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is released",
                "name": "false"
            }
        ],
        "actions": []
    },
    "WIDigitalLong": {
        "description": "Switch long press with digital input Wago modules (like 750-1405, ...) Long press switch. This switch supports single press and long press. User has 500ms to perform the long press.",
        "alias": [
            "WagoInputSwitchLongPress"
        ],
        "parameters": [
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "PLC address of the digital input",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is pressed quickly",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is pressed at least for 500ms (long press)",
                "name": "2"
            }
        ],
        "actions": []
    },
    "WIDigitalTriple": {
        "description": "Switch triple click with digital input Wago modules (like 750-1405, ...) Triple click switch. This switch can start 3 kind of actions. User has 500ms to do a multiple click.",
        "alias": [
            "WagoInputSwitchTriple"
        ],
        "parameters": [
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "PLC address of the digital input",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is triple clicked",
                "name": "3"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is single clicked",
                "name": "1"
            },
            {
                "description": "Event triggered when switch is double clicked",
                "name": "2"
            }
        ],
        "actions": []
    },
    "WITemp": {
        "description": "Temperature measurement with Wago temperature module (like 750-460) Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [
            "WagoInputTemp"
        ],
        "parameters": [
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "0",
                "description": "PLC address of the input sensor",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    },
    "WOAnalog": {
        "description": "Analog output with Wago module (like 0-10V, 4-20mA, ...) Analog output. Useful to control analog output devices connected to calaos.",
        "alias": [
            "WagoOutputAnalog"
        ],
        "parameters": [
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "default": "0",
                "description": "PLC address of the output",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Set a step for increment/decrement value. Default is 1.0",
                "mandatory": "false",
                "name": "step",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on a specific number value",
                "name": "0"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrement value by value",
                "name": "dec 1"
            },
            {
                "description": "Increment value by value",
                "name": "inc 1"
            },
            {
                "description": "Decrement value with configured step",
                "name": "dec"
            },
            {
                "description": "Set a specific number value",
                "name": "0"
            },
            {
                "description": "Increment value with configured step",
                "name": "inc"
            }
        ]
    },
    "WODali": {
        "description": "Light using DALI or DMX. For DALI you need a 750-641 wago module. For DMX, a DMX4ALL-LAN device connected to the Wago PLC. Light with dimming control. Light intensity can be changed for this light.",
        "alias": [
            "WagoOutputDimmer"
        ],
        "parameters": [
            {
                "default": "0",
                "description": "DALI fade time. value is between 1-10",
                "mandatory": "false",
                "max": "10",
                "min": "1",
                "name": "fade_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Set to 1 if address is a DALI group address, set to 0 otherwise.",
                "mandatory": "false",
                "max": "1",
                "min": "0",
                "name": "group",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Device address. For DALI address is between 1-64. For DMX, the address starts at 100. So for DMX device 5, address should be 105",
                "mandatory": "true",
                "max": "612",
                "min": "1",
                "name": "address",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "1",
                "description": "DALI bus line, usually 1",
                "mandatory": "false",
                "name": "line",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Dynamically change light intensity when holding a switch (stop action)",
                "name": "hold stop"
            },
            {
                "description": "Dynamically change light intensity when holding a switch (press action)",
                "name": "hold press"
            },
            {
                "description": "Decrease intensity by X percent",
                "name": "down 5"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Set light value without switching on. This will be the light intensity for the next ON",
                "name": "set off 50"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state 50"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Invert the light state",
                "name": "toggle"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Increase intensity by X percent",
                "name": "up 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            },
            {
                "description": "Set light intensity and swith on if light is off",
                "name": "set 50"
            }
        ]
    },
    "WODaliRVB": {
        "description": "RGB Light using DALI or DMX. To work you need 3 DALI/DMX channels. For DALI you need a 750-641 wago module. For DMX, a DMX4ALL-LAN device connected to the Wago PLC. RGB light. Choose a color to be set for this light.",
        "alias": [
            "WagoOutputDimmerRGB"
        ],
        "parameters": [
            {
                "default": "0",
                "description": "DALI fade time for green channel. value is between 1-10",
                "mandatory": "false",
                "max": "10",
                "min": "1",
                "name": "gfade_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "1",
                "description": "DALI bus line for green channel, usually 1",
                "mandatory": "false",
                "name": "gline",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Set to 1 if address for blue channel is a DALI group address, set to 0 otherwise.",
                "mandatory": "false",
                "max": "1",
                "min": "0",
                "name": "bgroup",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Set to 1 if address for red channel is a DALI group address, set to 0 otherwise.",
                "mandatory": "false",
                "max": "1",
                "min": "0",
                "name": "rgroup",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Device address for red channel. For DALI address is between 1-64. For DMX, the address starts at 100. So for DMX device 5, address should be 105",
                "mandatory": "true",
                "max": "612",
                "min": "1",
                "name": "raddress",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "0",
                "description": "DALI fade time for blue channel. value is between 1-10",
                "mandatory": "false",
                "max": "10",
                "min": "1",
                "name": "bfade_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "1",
                "description": "DALI bus line for blue channel, usually 1",
                "mandatory": "false",
                "name": "bline",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Device address for green channel. For DALI address is between 1-64. For DMX, the address starts at 100. So for DMX device 5, address should be 105",
                "mandatory": "true",
                "max": "612",
                "min": "1",
                "name": "gaddress",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Set to 1 if address for green channel is a DALI group address, set to 0 otherwise.",
                "mandatory": "false",
                "max": "1",
                "min": "0",
                "name": "ggroup",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Device address for blue channel. For DALI address is between 1-64. For DMX, the address starts at 100. So for DMX device 5, address should be 105",
                "mandatory": "true",
                "max": "612",
                "min": "1",
                "name": "baddress",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "DALI fade time for red channel. value is between 1-10",
                "mandatory": "false",
                "max": "10",
                "min": "1",
                "name": "rfade_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "1",
                "description": "DALI bus line for red channel, usually 1",
                "mandatory": "false",
                "name": "rline",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrease intensity by X percent of green channel",
                "name": "down_green 5"
            },
            {
                "description": "Decrease intensity by X percent of red channel",
                "name": "down_red 5"
            },
            {
                "description": "Increase intensity by X percent of blue channel",
                "name": "up_blue 5"
            },
            {
                "description": "Increase intensity by X percent of green channel",
                "name": "up_green 5"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Set color. Color can be represented by using HTML notation: #AABBCC, rgb(50, 10, 30), hsl(11, 22, 33)",
                "name": "set #AA1294"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert the light state (ON/OFF)",
                "name": "toggle"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Set blue channel to X percent",
                "name": "set_blue 50"
            },
            {
                "description": "Increase intensity by X percent of red channel",
                "name": "up_red 5"
            },
            {
                "description": "Decrease intensity by X percent of blue channel",
                "name": "down_blue 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state #AA1294"
            },
            {
                "description": "Set red channel to X percent",
                "name": "set_red 50"
            },
            {
                "description": "Set green channel to X percent",
                "name": "set_green 50"
            }
        ]
    },
    "WODigital": {
        "description": "Simple light or relay control using wago digital output modules (like 750-1504, ...) Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [
            "WagoOutputLight"
        ],
        "parameters": [
            {
                "default": "true",
                "description": "Should be false if PLC is 750-842, true otherwise",
                "mandatory": "true",
                "name": "wago_841",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "PLC address of the output",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            },
            {
                "description": "Set to true if output is a KNX device (only for 750-849 with KNX/TP1 module)",
                "mandatory": "false",
                "name": "knx",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "WOLOutputBool": {
        "description": "Wake On Lan output object. Send wake-on-lan packet to a device on the network.",
        "alias": [],
        "parameters": [
            {
                "default": "15000",
                "description": "Interval between pings in ms. Default to 15 sec",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Ethernet MAC address of the host to wake up",
                "mandatory": "true",
                "name": "address",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": [
            {
                "description": "Send wake on lan packet to the configured device",
                "name": "true"
            }
        ]
    },
    "WOVolet": {
        "description": "Simple shutter using wago digital output modules (like 750-1504, ...) Simple shutter. This shutter supports open/close states, as well as impulse shutters.",
        "alias": [
            "WagoOutputShutter"
        ],
        "parameters": [
            {
                "default": "0",
                "description": "Digital output address on the PLC for closing the shutter",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Set to true if output is a KNX device (only for 750-849 with KNX/TP1 module)",
                "mandatory": "false",
                "name": "knx",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Digital output address on the PLC for opening the shutter",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Should be false if PLC is 750-842, true otherwise",
                "mandatory": "true",
                "name": "wago_841",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to open or close",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            }
        ]
    },
    "WOVoletSmart": {
        "description": "Smart shutter using wago digital output modules (like 750-1504, ...) Smart shutter. This shutter calculates the position of the shutter based on the time it takes to open and close. It then allows to set directly the shutter at a specified position.",
        "alias": [
            "WagoOutputShutterSmart"
        ],
        "parameters": [
            {
                "default": "true",
                "description": "Should be false if PLC is 750-842, true otherwise",
                "mandatory": "true",
                "name": "wago_841",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Digital output address on the PLC for closing the shutter",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Set to true if output is a KNX device (only for 750-849 with KNX/TP1 module)",
                "mandatory": "false",
                "name": "knx",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Wago PLC IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "If in impulse mode, some shutters needs to activate both up dans down relays when stopping the shutter",
                "mandatory": "false",
                "name": "stop_both",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "0",
                "description": "Digital output address on the PLC for opening the shutter",
                "mandatory": "true",
                "max": "65535",
                "min": "0",
                "name": "var_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to fully closed. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_down",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "60",
                "description": "Time in sec for shutter to be fully open. The more accurate, the better it will work",
                "mandatory": "true",
                "max": "9999",
                "min": "0",
                "name": "time_up",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "502",
                "description": "Wago ethernet port, default to 502",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "0",
                "description": "Impulse time for shutter that needs impulse instead of holding up/down relays. If set to 0 impulse shutter is disabled. Time is in ms. Default to 0",
                "mandatory": "false",
                "max": "999999",
                "min": "0",
                "name": "impulse_time",
                "readonly": "false",
                "type": "int"
            }
        ],
        "conditions": [
            {
                "description": "Event when shutter is closed",
                "name": "false"
            },
            {
                "description": "Event on any change of shutter state",
                "name": "changed"
            },
            {
                "description": "Event when shutter is open",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Open shutter for X ms",
                "name": "impulse up 200"
            },
            {
                "description": "Set shutter at position X in percent",
                "name": "set 50"
            },
            {
                "description": "Open the shutter",
                "name": "up"
            },
            {
                "description": "Close the shutter",
                "name": "down"
            },
            {
                "description": "Close shutter for X ms",
                "name": "impulse down 200"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Invert shutter state",
                "name": "toggle"
            },
            {
                "description": "Open the shutter by X percent",
                "name": "up 5"
            },
            {
                "description": "Start calibration on shutter. This opens fully the shutter and resets all internal position values. Use this if shutter sync is lost.",
                "name": "calibrate"
            },
            {
                "description": "Stop the shutter",
                "name": "stop"
            },
            {
                "description": "Close the shutter by X percent",
                "name": "down 5"
            },
            {
                "description": "Update internal shutter state without starting real action. This is useful when having updating the shutter state from an external source.",
                "name": "set_state true"
            }
        ]
    },
    "X10Output": {
        "description": "Light dimmer using X10 and heyu. Light with dimming control. Light intensity can be changed for this light.",
        "alias": [],
        "parameters": [
            {
                "description": "House code of the X10 light device",
                "mandatory": "true",
                "name": "code",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is at this value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Dynamically change light intensity when holding a switch (stop action)",
                "name": "hold stop"
            },
            {
                "description": "Dynamically change light intensity when holding a switch (press action)",
                "name": "hold press"
            },
            {
                "description": "Decrease intensity by X percent",
                "name": "down 5"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Set light value without switching on. This will be the light intensity for the next ON",
                "name": "set off 50"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state 50"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Invert the light state",
                "name": "toggle"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Increase intensity by X percent",
                "name": "up 5"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            },
            {
                "description": "Set light intensity and swith on if light is off",
                "name": "set 50"
            }
        ]
    },
    "xPLInputAnalog": {
        "description": "xPL analog sensor An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [],
        "parameters": [
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Sensor ID, as set in your xPL network",
                "mandatory": "true",
                "name": "sensor",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Source name, as set in your xPL network (Format VendorId-DeviceId.Instance)",
                "mandatory": "true",
                "name": "source",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "xPLInputString": {
        "description": "xPL string sensor",
        "alias": [],
        "parameters": [
            {
                "description": "Source name, as set in your xPL network (Format VendorId-DeviceId.Instance)",
                "mandatory": "true",
                "name": "source",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sensor ID, as set in your xPL network",
                "mandatory": "true",
                "name": "sensor",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "xPLInputSwitch": {
        "description": "xPL input switch Basic switch with press/release states.",
        "alias": [],
        "parameters": [
            {
                "description": "Source name, as set in your xPL network (Format VendorId-DeviceId.Instance)",
                "mandatory": "true",
                "name": "source",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "Sensor ID, as set in your xPL network",
                "mandatory": "true",
                "name": "sensor",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is pressed",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is released",
                "name": "false"
            }
        ],
        "actions": []
    },
    "xPLInputTemp": {
        "description": "xPL temperature sensor Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [],
        "parameters": [
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Sensor ID, as set in your xPL network",
                "mandatory": "true",
                "name": "sensor",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Source name, as set in your xPL network (Format VendorId-DeviceId.Instance)",
                "mandatory": "true",
                "name": "source",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    },
    "xPLOutputAnalog": {
        "description": "Analog output controlled by xPL Protocol Analog output. Useful to control analog output devices connected to calaos.",
        "alias": [],
        "parameters": [
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Source name, as set in your xPL network (Format VendorId-DeviceId.Instance)",
                "mandatory": "true",
                "name": "source",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Actuator ID, as set in your xPL network",
                "mandatory": "true",
                "name": "actuator",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "1",
                "description": "Set a step for increment/decrement value. Default is 1.0",
                "mandatory": "false",
                "name": "step",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_sent = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on a specific number value",
                "name": "0"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            }
        ],
        "actions": [
            {
                "description": "Decrement value by value",
                "name": "dec 1"
            },
            {
                "description": "Increment value by value",
                "name": "inc 1"
            },
            {
                "description": "Decrement value with configured step",
                "name": "dec"
            },
            {
                "description": "Set a specific number value",
                "name": "0"
            },
            {
                "description": "Increment value with configured step",
                "name": "inc"
            }
        ]
    },
    "xPLOutputString": {
        "description": "Analog output controlled by xPL Protocol",
        "alias": [],
        "parameters": [
            {
                "description": "Actuator ID, as set in your xPL network",
                "mandatory": "true",
                "name": "actuator",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Source name, as set in your xPL network (Format VendorId-DeviceId.Instance)",
                "mandatory": "true",
                "name": "source",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [],
        "actions": []
    },
    "xPLOutputSwitch": {
        "description": "Light/relay controlled by xPL Protocol Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [],
        "parameters": [
            {
                "description": "Actuator ID, as set in your xPL network",
                "mandatory": "true",
                "name": "actuator",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Source name, as set in your xPL network (Format VendorId-DeviceId.Instance)",
                "mandatory": "true",
                "name": "source",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "ZibaseAnalogIn": {
        "description": "Zibase analog input. This object can read value from devices like Energy monitor sensors, Lux sensors, ... An analog input can be used to read analog values to display them and use them in rules.",
        "alias": [],
        "parameters": [
            {
                "default": "energy",
                "description": "Type of sensor",
                "mandatory": "true",
                "name": "zibase_sensor",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "energy": "Energy monitor sensor",
                    "lux": "Lux sensor",
                    "t_rain": "Total rain sensor",
                    "wind": "Wind sensor"
                }
            },
            {
                "description": "Zibase IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "default",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "current": "Current",
                    "default": "Default",
                    "humidity": "Humidity",
                    "luminosity": "Luminosity",
                    "pressure": "Pressure",
                    "speed": "Speed",
                    "temperature": "Temperature",
                    "voltage": "Voltage",
                    "watt": "Watt"
                }
            },
            {
                "description": "Unit which will be displayed on the UI as a suffix.",
                "mandatory": "false",
                "name": "unit",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Zibase device ID (ABC)",
                "mandatory": "true",
                "name": "zibase_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "17100",
                "description": "Zibase ethernet port, default to 17100",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "1",
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "0",
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event on a specific value",
                "name": "value"
            }
        ],
        "actions": []
    },
    "ZibaseDigitalIn": {
        "description": "Zibase digital input. This object acts as a switch Basic switch with press/release states.",
        "alias": [],
        "parameters": [
            {
                "default": "detect",
                "description": "Type of sensor",
                "mandatory": "true",
                "name": "zibase_sensor",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "detect": "Door/Window sensor",
                    "inter": "Switch/Remote control"
                }
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "A switch can't be visible. Always false.",
                "mandatory": "false",
                "name": "visible",
                "readonly": "true",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "17100",
                "description": "Zibase ethernet port, default to 17100",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Second Zibase device ID (ABC)",
                "mandatory": "true",
                "name": "zibase_id2",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "First Zibase device ID (ABC)",
                "mandatory": "true",
                "name": "zibase_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Zibase IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event triggered when switch is pressed",
                "name": "true"
            },
            {
                "description": "Event on any change of state",
                "name": "changed"
            },
            {
                "description": "Event triggered when switch is released",
                "name": "false"
            }
        ],
        "actions": []
    },
    "ZibaseDigitalOut": {
        "description": "Zibase digital output. This object controls Zibase devices Basic light. This light have only 2 states, ON or OFF. Can also be used to control simple relays output",
        "alias": [],
        "parameters": [
            {
                "default": "1",
                "description": "Number of burst to send to the device",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "nbburst",
                "readonly": "false",
                "type": "int"
            },
            {
                "default": "0",
                "description": "Protocol to use",
                "mandatory": "true",
                "name": "protocol",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "0": "DEFAULT_PROTOCOL",
                    "1": "VISONIC433",
                    "10": "XDD868shutter",
                    "11": "XDD868pilot",
                    "12": "XDD868boiler",
                    "2": "VISONIC868",
                    "3": "CHACON",
                    "4": "DOMIA",
                    "5": "RFX10",
                    "6": "ZWAVE",
                    "7": "RFSTS10",
                    "8": "XDD433alrm",
                    "9": "XDD868alrmn"
                }
            },
            {
                "description": "Zibase device ID (ABC)",
                "mandatory": "true",
                "name": "zibase_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "17100",
                "description": "Zibase ethernet port, default to 17100",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "light",
                "description": "GUI style display. This will control the icon displayed on the UI",
                "mandatory": "true",
                "name": "io_style",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "boiler": "Boiler",
                    "heater": "Heater",
                    "light": "Light",
                    "outlet": "Outlet",
                    "pump": "Pump"
                }
            },
            {
                "description": "Zibase IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            }
        ],
        "conditions": [
            {
                "description": "Event when light is off",
                "name": "false"
            },
            {
                "description": "Event on any change of value",
                "name": "changed"
            },
            {
                "description": "Event when light is on",
                "name": "true"
            }
        ],
        "actions": [
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state true"
            },
            {
                "description": "Update internal light state without starting real action. This is useful when having updating the light state from an external source.",
                "name": "set_state false"
            },
            {
                "description": "Switch the light off",
                "name": "false"
            },
            {
                "description": "Switch the light on",
                "name": "true"
            },
            {
                "description": "Invert light state",
                "name": "toggle"
            },
            {
                "description": "Do an impulse on light state with a pattern.<br>Ex: 500 200 500 200 means: TRUE for 500ms, FALSE for 200ms, TRUE for 500ms, FALSE for 200ms<br>Ex: 500 loop 200 300 means: TRUE for 500ms, then loop the next steps for infinite, FALSE for 200ms, TRUE for 300ms<br>Ex: 100 100 200 old means: blinks and then set to the old start state (before impulse starts)",
                "name": "impulse 500 200 500 200"
            },
            {
                "description": "Do an impulse on light state. Set to true for X ms then reset to false",
                "name": "impulse 200"
            }
        ]
    },
    "ZibaseTemp": {
        "description": "Zibase temperature sensor Temperature sensor input. Use for displaying temperature and to control heating devices with rules based on temperature value",
        "alias": [],
        "parameters": [
            {
                "default": "temp",
                "description": "Type of sensor",
                "mandatory": "true",
                "name": "zibase_sensor",
                "readonly": "false",
                "type": "list",
                "list_value": {
                    "temp": "Temperature sensor"
                }
            },
            {
                "description": "Zibase IP address on the network",
                "mandatory": "true",
                "name": "host",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "2",
                "description": "Precision of the returned value. The value represents the number of decimal after the dot. The value is rounded like this : value = 19.275 => returned value 19.28 when preicision = 2, 19.3 when precision = 1, 19 when precision = 0",
                "mandatory": "false",
                "max": "9999",
                "min": "0",
                "name": "precision",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "Zibase device ID (ABC)",
                "mandatory": "true",
                "name": "zibase_id",
                "readonly": "false",
                "type": "string"
            },
            {
                "description": "Sampling time in microsecond. The value is read at this frequency. If this value is not set, calaos tries to read the interval parameter",
                "mandatory": "false",
                "name": "frequency",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "Name of Input/Output.",
                "mandatory": "true",
                "name": "name",
                "readonly": "false",
                "type": "string"
            },
            {
                "default": "17100",
                "description": "Zibase ethernet port, default to 17100",
                "mandatory": "false",
                "max": "65535",
                "min": "0",
                "name": "port",
                "readonly": "false",
                "type": "int"
            },
            {
                "description": "IO type, can be \"input\", \"output\", \"inout\"",
                "mandatory": "true",
                "name": "io_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "true",
                "description": "Display the Input/Output on all user interfaces if set. Default to true",
                "mandatory": "false",
                "name": "visible",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Unique ID identifying the Input/Output in calaos-server",
                "mandatory": "true",
                "name": "id",
                "readonly": "true",
                "type": "string"
            },
            {
                "description": "Internal graphical type for all calaos objects. Set automatically, read-only parameter.",
                "mandatory": "false",
                "name": "gui_type",
                "readonly": "true",
                "type": "string"
            },
            {
                "default": "false",
                "description": "If enabled, and if influxdb is enabled in local_config send the value to influxdb for this IO",
                "mandatory": "false",
                "name": "logged",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "Sampling time in seconds. The value is read at this frequency. If this value is not set, the default value is 15s",
                "mandatory": "false",
                "name": "interval",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_b to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 1.0.",
                "mandatory": "false",
                "name": "coeff_a",
                "readonly": "false",
                "type": "float"
            },
            {
                "description": "use in conjunction of coeff_a to apply equation of the form `value_displayed = coeff_a * raw_value + coeff_b`. Default value is 0.0",
                "mandatory": "false",
                "name": "coeff_b",
                "readonly": "false",
                "type": "float"
            },
            {
                "default": "true",
                "description": "Enable the Input/Output. The default value is true. This parameter is added if it's not found in the configuration.",
                "mandatory": "false",
                "name": "enabled",
                "readonly": "false",
                "type": "bool"
            },
            {
                "default": "false",
                "description": "If enabled, write an entry in the history event log for this IO",
                "mandatory": "false",
                "name": "log_history",
                "readonly": "false",
                "type": "bool"
            },
            {
                "description": "same as coeff_b, can be used alone. Default value is 0.0",
                "mandatory": "false",
                "name": "offset",
                "readonly": "false",
                "type": "float"
            }
        ],
        "conditions": [
            {
                "description": "Event on any change of temperature value",
                "name": "changed"
            },
            {
                "description": "Event on a temperature value in degree Celsius",
                "name": "value"
            }
        ],
        "actions": []
    }
}